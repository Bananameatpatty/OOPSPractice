Use the template given and fill the incomplete code

objective

Create a class called time that has separate int member data for hours, minutes, and seconds. One constructor should initialize this data to 0, and another should initialize it to fixed values. Another member function should display it, in 11:59:59 format. The final member function should add two objects of type time passed as arguments. A main() program should create two initialized time objects (should they be const?) and one that isnâ€™t initialized. Then it should add the two initialized values together, leaving the result in the third time variable. Finally it should display the value of this third variable. Make appropriate member functions const

Explanation for inputs

There is no explicit input to this problem. You have to initialise through the constructor calls only. For example

will give the following output

Sample Output

time3 = 10:30:29



this is the template:

#include <iostream>
using namespace std;

class Time
{
private:
int hrs, mins, secs;
public:
Time()   //no-arg constructor
{
//@start-editable@



//@end-editable@

 }
//3-arg constructor
Time(int h, int m, int s) 
{ 
//@start-editable@



//@end-editable@


}
void display() const //format 11:59:59
{ 
cout<<hrs<<":"<<mins<<":"<<secs;

 }
 
void add_Time(Time t1,Time t2) //add two times
{
//@start-editable@



//@end-editable@

}

};

int main()
{
 
 Time Time1(5, 59, 59); //creates and initialze
 Time Time2(4, 30, 30); // two times
Time Time3; //create another time
Time3.add_Time(Time1,Time2);

cout <<"time3 = "; Time3.display(); //display result
cout << endl;
    
    return 0;
    
}

